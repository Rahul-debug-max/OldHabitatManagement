@model FormDesignTemplateModelBE

@{
    Layout = null;
}

<style>
    .modal {
        position: absolute !important;
        overflow: auto !important;
    }

    .formOuterStyle {
        border: 1px solid;
        padding: 5px 0px 0px 0px;
    }

    .fontBold {
        font-weight: bold;
    }

    /*    .bgLightGray {
        background-color: lightgray;
    }*/

    .conditionDigitalSignature canvas {
        height: 97px !important;
        background-color: white !important;
    }

    .tableCheckList td, .tableCheckList th {
        border: 1px solid black;
        padding: 3px 10px 3px 15px;
    }

    .dvCheckList table tr th:first-child, .dvCheckList table tr:first-child td, .dvCheckList table {
        border: none !important;
    }

    .tableCheckList {
        width: 100%;
        border-collapse: collapse;
    }

    .bgColorWhite {
        background-color: white;
    }


    .sectionStyle {
        outline: 1px dashed red !important;
        outline-offset: -3px;
        padding: 10px;
    }

        .sectionStyle:hover * {
            cursor: move;
        }

    .mrgright {
        margin-right: 2px;
    }

    .mrgleft {
        margin-left: 2px;
    }

    .form-control[readonly] {
        cursor: move;
        background-color: #eee !important;
        opacity: 1;
    }
</style>
@if (Model.RenderForDragnDrop)
{
    <script src="~/js/View/FormTemplateFields.js"></script>
}
<script src="~/js/JSignature/jSignature.js"></script>
<script src="~/js/JSignature/jSignature.CompressorBase30.js"></script>
<script src="~/js/JSignature/jSignature.CompressorSVG.js"></script>
<script src="~/js/JSignature/jSignature.UndoButton.js"></script>

<script type="text/javascript">
    var hasStopTimer = false;
    $(document).ready(function () {
        if ('@Model.RenderForDragnDrop' == 'True') {
            FormTemplateFields.onInit({
                formId: JSON.parse('@Model.FormID'),
                saveDataURL: '@Url.Action("PermitFormScreenDesignTemplateDetailFields", "Home")'
            });
        }

        $('.dvSignatureDataType').each(function (i, ele) {
            var singnatureDv = $(ele).find('div[id^="digitalSignature_"]');
            if ($(singnatureDv).find('canvas').length == 0) {
                var $digSigdiv = singnatureDv.jSignature({ 'UndoButton': false, 'cssclass': 'digitalcanvas' });
                var image64BitString = $(ele).find('#SignatureResponse');
                if ($.trim($(image64BitString).val()) != "") {
                    $(singnatureDv).jSignature("importData", $(image64BitString).val());
                }
                $digSigdiv.jSignature("disable");
            }
        });

        $(window).trigger('resize');
        $(window).resize(function () {
            hasStopTimer = false;
            setTimeout(function () {
                if (!hasStopTimer) {
                    getDigitalSignature();
                }
            }, 1000);
        });

        setTimeout(function () {
            if (!hasStopTimer) {
                getDigitalSignature();
            }
        }, 1000);

        setDateTimePicker();

        $('.dvCheckList').find('input[type="checkbox"]').on('change', function () {
            var isChecked = $(this).is(":checked");
            $(this).closest("tr").find('input:checkbox').prop('checked', false);
            $(this).prop("checked", isChecked);
        });

        $('.formFieldTypeCheckbox').find('input[type="checkbox"]').on('change', function () {
            var isChecked = $(this).is(":checked");
            $(this).closest("div").find('input:checkbox').prop('checked', false);
            $(this).prop("checked", isChecked);
        });
    });

    function getDigitalSignature() {
        hasStopTimer = true;
        var signatureId = '';
        var digitalSignature = '';
        var digitalSignatureImage64BitString = '';
        $('.dvSignatureDataType').each(function (i, ele) {
            digitalSignature = $(ele).find('div[id^="digitalSignature_"]');
            digitalSignatureImage64BitString = $(ele).find('#SignatureResponse');
            signatureId = $(ele).find('#SignatureId');

            $.ajax({
                type: 'GET',
                cache: false,
                async: false,
                data: { signatureId: $(signatureId).val() != "" && $(signatureId).val() != null ? $(signatureId).val() : 0 },
                url: '@Url.Action("GetDigitalSignature", "Home")',
                success: function (result) {
                    if (result.signature) {
                        $(digitalSignature).jSignature("importData", result.signature);
                        $(digitalSignatureImage64BitString).val(result.signature);
                    }
                },
                error: function () {
                },
                beforeSend: function () { $("#wait").css("display", "block"); },
                complete: function () {
                    $("#wait").css("display", "none");
                }
            });
        });
    }

    function editDigitalSignature(obj) {
        var singnatureDv = $(obj).closest('.dvSignatureDataType').find('div[id^="digitalSignature_"]');
        if (singnatureDv.length > 0) {
            $(singnatureDv).jSignature("clear");
            $(singnatureDv).jSignature("enable");
            var image64BitString = $(obj).closest('.dvSignatureDataType').find('#SignatureResponse');
            $(image64BitString).val('');
        }
    }

    function resetDigitalSignature(obj) {
        var singnatureDv = $(obj).closest('.dvSignatureDataType').find('div[id^="digitalSignature_"]');
        if (singnatureDv.length > 0) {
            $(singnatureDv).jSignature("clear");
            $(singnatureDv).jSignature("disable");
            var image64BitString = $(obj).closest('.dvSignatureDataType').find('#SignatureResponse');
            if ($.trim($(image64BitString).val()) != "") {
                $(singnatureDv).jSignature("importData", $(image64BitString).val());
            }

            getDigitalSignature();
        }
    }

</script>
<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 paddlftght-none">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 paddlftrght-none xspaddrght dvFormFeedbackData">
        @Html.Raw(Model.FormSectionFields())
    </div>
</div>